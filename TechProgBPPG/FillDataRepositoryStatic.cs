using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TechProgBPPG
{
    public class FillDataRepositoryStatic : DataInterface
    {
        public void FillBookDictionary(DataRepository dr)
        {
            Book book = new Book("The Shining", "King, Stephen");
            dr.CreateBook(book);
            Book book1 = new Book("Symfonia C++", "Grębosz, Jerzy");
            dr.CreateBook(book1);
            Book book2 = new Book("Call of Cthulu", "Lovecraft, H.P.");
            dr.CreateBook(book2);
            Book book3 = new Book("Ruins", "Smith, Scott");
            dr.CreateBook(book3);
            Book book4 = new Book("Ruins", "Smith, Scott");
            dr.CreateBook(book4);
            Book book5 = new Book("Władca Pierścieni", "JRR Tolkien");
            dr.CreateBook(book5);
            Book book6 = new Book("Jane Eyre", "Charlotte Bronte");
            dr.CreateBook(book6);
            Book book7 = new Book("Harry Potter i czara ognia", "JK Rowling");
            dr.CreateBook(book7);
            Book book8 = new Book("Zabić drozda", "Harper Lee");
            dr.CreateBook(book8);
            Book book9 = new Book("Wichrowe Wzgórza", ";Emily Bronte");
            dr.CreateBook(book9);
            Book book10 = new Book("Rok 1984", "George Orwell");
            dr.CreateBook(book10);
            Book book11 = new Book("Mroczne materie", "Philip Pullman");
            dr.CreateBook(book11);
            Book book12 = new Book("Wielkie nadzieje", "Charles Dickens");
            dr.CreateBook(book12);
            Book book13 = new Book("Małe kobietki", "Louisa M Alcott");
            dr.CreateBook(book13);
            Book book14 = new Book("Tessa D’Urberville", "Thomas Hardy");
            dr.CreateBook(book14);
            Book book15 = new Book("Paragraf 22", "Joseph Heller");
            dr.CreateBook(book15);
            Book book16 = new Book("Rebeka", "Daphne Du Maurier");
            dr.CreateBook(book16);
            Book book17 = new Book("Hobbit", "JRR Tolkien");
            dr.CreateBook(book17);
            Book book18 = new Book("Birdsong", "Sebastian Faulks");
            dr.CreateBook(book18);
            Book book19 = new Book("Buszujący w zbożu", "JD Salinger");
            dr.CreateBook(book19);
            Book book20 = new Book("Żona podróżnika w czasie", "Audrey Niffenegger");
            dr.CreateBook(book20);
            Book book21 = new Book("Miasteczko Middlemarch", "George Eliot");
            dr.CreateBook(book21);
            Book book22 = new Book("Przeminęło z wiatrem", "Margaret Mitchell");
            dr.CreateBook(book22);
            Book book23 = new Book("Wielki Gatsby;", "Scott Fitzgerald");
            dr.CreateBook(book23);
            Book book24 = new Book("Wojna i pokój", "Lew Tołstoj");
            dr.CreateBook(book24);
            Book book25 = new Book("Autostopem przez Galaktykę", "Douglas Adams");
            dr.CreateBook(book25);
            Book book26 = new Book("Znowu w Brideshead", "Evelyn Waugh");
            dr.CreateBook(book26);
            Book book27 = new Book("Zbrodnia i kara", "Fiodor Dostojewski");
            dr.CreateBook(book27);
            Book book28 = new Book("Grona gniewu", "John Steinbeck");
            dr.CreateBook(book28);
            Book book29 = new Book("Alicja w Krainie Czarów", "Lewis Carroll");
            dr.CreateBook(book29);
            Book book30 = new Book("Symfonia C++", "Grębosz, Jerzy");
            dr.CreateBook(book30);
            Book book31 = new Book("O czym szumią wierzby", "Kenneth Grahame");
            dr.CreateBook(book31);
            Book book32 = new Book("Anna Karenina", "Lew Tołstoj");
            dr.CreateBook(book32);
            Book book33 = new Book("David Copperfield", "Charles Dickens");
            dr.CreateBook(book33);
            Book book34 = new Book("Emma", "Jane Austen");
            dr.CreateBook(book34);
            Book book35 = new Book("Perswazje", "Jane Auste");
            dr.CreateBook(book35);
            Book book36 = new Book("Lew, Czarwnica i Stara Szafa", "CS Lewis");
            dr.CreateBook(book36);
            Book book37 = new Book("Sto lat samotności", "Gabriel Garcia Marquez");
            dr.CreateBook(book37);
            Book book38 = new Book("Modlitwa za Owena", "John Irving");
            dr.CreateBook(book38);
            Book book39 = new Book("Kobieta w bieli", "Wilkie Collins");
            dr.CreateBook(book39);
            Book book40 = new Book("Ania z Zielonego Wzgórza", "LM Montgomery");
            dr.CreateBook(book40);
            Book book41 = new Book("Z dala od zgiełku", "Thomas Hardy");
            dr.CreateBook(book41);
            Book book42 = new Book("Opowieść podręcznej", "Margaret Atwood");
            dr.CreateBook(book42);
            Book book43 = new Book("Władca much", "Ian McEwan");
            dr.CreateBook(book43);
            Book book44 = new Book("Życie Pi", "Yann Martel");
            dr.CreateBook(book44);
            Book book45 = new Book("Symfonia C++", "Grębosz, Jerzy");
            dr.CreateBook(book45);
            Book book46 = new Book("W drodze", "Jack Kerouac");
            dr.CreateBook(book46);
            Book book47 = new Book("Juda nieznany", "Thomas Hardy");
            dr.CreateBook(book47);
            Book book48 = new Book("Dziennik Bridget", "Helen Fielding");
            dr.CreateBook(book48);
            Book book49 = new Book("Dzieci północy", "Salman Rushdie");
            dr.CreateBook(book49);
        }

        public void FillReadersList(DataRepository dr)
        {
            Reader reader = new Reader("Bartosz Pietrzak", "Smetany 99", "004694694");
            Reader reader1 = new Reader("Przemyslaw Gesieniec", "Osterwy 152", "99094954694");
            Reader reader2 = new Reader("Bartosz Pietrzak", "Smetany 150", "3300694694");
            Reader reader3 = new Reader("Fryderyka Rutkowska", " ul.Hallera 99", " 781248624");
            Reader reader4 = new Reader("  Józefa Zawadzka", " ul. 15 Sierpnia 13", " 151651216");
            Reader reader5 = new Reader("Lucjusz Olszewski", " Al.Planetarium 44", " 1868455156");
            Reader reader6 = new Reader(" Zdzisława Woźniak", " ul.Kościuszkowców 88", " 7593654841");
            Reader reader7 = new Reader(" Sławomira Chmielewsk", " ul.Długosza Jana 25", " 38101961144");
            Reader reader8 = new Reader(" Klemens Jabłoński", " ul.Północna 93", " 94080361557");
            Reader reader9 = new Reader(" Stefcia Adamczyk", " ul.Cmentarna 51", " 51051605805");
            Reader reader10 = new Reader(" Henryka Nowakowskaul", " Skłodowskiej Curie Marii 28", " 57120955460");
            Reader reader11 = new Reader(" Zachariasz Gorski", " ul.Fiszera Stanisława 22", "; 80020237998");
            Reader reader12 = new Reader(" Hipolit Majewski", " ul.Stoczni Gdańskiej 69", " 8965748965");
            Reader reader13 = new Reader(" Albina Walczak", " ul.Szeroka 44", " 68101670883");
            Reader reader14 = new Reader(" Cibor Pawłowski", " Pl.Szembeka Piotra 86", " 35072564196");
            Reader reader15 = new Reader(" Tadzio Woźniak", " ul.Sienkiewicza Henryka 111", " 7896541258");
            Reader reader16 = new Reader(" Beatrycze Grabowska", " ul.Cedyńska 132", " 89032773344");
            Reader reader17 = new Reader(" Mateusz Kucharski", " ul.Stefana Batorego 26", " 76110388118");
            Reader reader18 = new Reader(" Eligia Adamczyk", " ul.Poetów 56", " 5468953276");
            Reader reader19 = new Reader(" Wiola Wojciechowska", " ul.Daktylowa", " 1386904421");
            Reader reader20 = new Reader(" Małgorzata Kowalczyk", " ul.Króla Bolesława Chrobrego 43", " 95120523104");
            Reader reader21 = new Reader(" Marcin Zielinski", " ul.Aleje Jerozolimskie 112", " 33022757139");
            Reader reader22 = new Reader("  Michał Grabowski", " ul.Kosmiczna 47", " 90112057975");
            Reader reader23 = new Reader("  Edyta Grabowska", " ul.Kalinowa 57", " 84080384700");
            Reader reader24 = new Reader(" Marek Zielinski", " ul.Rzewińska 140", " 47050332194");
            Reader reader25 = new Reader(" Stanisława Kowalska", " ul.Retmańska 75", " 31102168886");
            Reader reader26 = new Reader(" Ela Pawlak", " ul.Wilcza 15", " 68090676602");
            Reader reader27 = new Reader(" Gaweł Kalinowski", " ul.Spółdzielcza 92", " 65042308376");
            Reader reader28 = new Reader(" Aureliusz Kamiński", " ul.Brama Oliwska 32", " 84020346612");
            Reader reader29 = new Reader(" Małgorzata Symanska", " ul.Przetoczna 113", " 78945685444");
            Reader reader30 = new Reader("  Judyta Szczepańska", " ul.Na Kozłówce 131", " 94092264729");
            Reader reader31 = new Reader(" Longin Kucharski", " ul.Gipsowa 52", " 55092718618");
            Reader reader32 = new Reader(" Ela Olszewska", " ul.Kurpiowska 25", " 90030888484");
            Reader reader33 = new Reader(" Serafina Chmielewska", " ul.Zwycięstwa 137", " 73082030146");
            Reader reader34 = new Reader("Egidiusz Jasiński", " ul.Odległa 52", " 45061885131");
            Reader reader35 = new Reader(" Hipolit Jaworski", " ul.Warmińska 82", " 84121931816");
            Reader reader36 = new Reader(" Tobiasz Woźniak", " ul.Pograniczna 119", " 73012806173");
            Reader reader37 = new Reader(" Lesława Duda", " ul.Lipowa 114", " 34061579241");
            Reader reader38 = new Reader(" Klaudia Kaczmarek", " ul.Na Borach 7", " 77082839569");
            Reader reader39 = new Reader(" Krystyna Sawicka", " ul.Osuchowska 89", " 63120946384");
            Reader reader40 = new Reader(" Benedykta Jasińska", " ul.Modrzejewskiej Heleny 138", " 44122105146");
            Reader reader41 = new Reader(" Celestyn Sobczak", " ul.Słowackiego Juliusza 21", " 40090786097");
            Reader reader42 = new Reader(" Tytus Pawłowski", " Pl.Świętego Jana 71", " 53080711755");
            Reader reader43 = new Reader(" Bogusława Sobczak", " ul.Portowa 147", " 92012646400");
            Reader reader44 = new Reader(" Jadzia Piotrowska", " ul.Przejazd 54", " 65102071002");
            Reader reader45 = new Reader(" Agnieszka Zielinska", " ul.Rewolucji 1905 r. 16", " 43092581042");
            Reader reader46 = new Reader(" Wisia Symanska", " ul.Lniana 13", " 60111002405");
            Reader reader47 = new Reader(" Bazyli Woźniak", " ul.Profesora Karnickiej Haliny 40", " 66091896355");
            Reader reader48 = new Reader(" Kondrat Jaworski", " ul.Królowej Jadwigi 61", " 54081955232");
            Reader reader49 = new Reader(" Bonifacy Wojciechowski", " ul.Artylerzystów 130", " 65100905833");

            dr.CreateReader(reader);
            dr.CreateReader(reader1);
            dr.CreateReader(reader2);
            dr.CreateReader(reader3);
            dr.CreateReader(reader4);
            dr.CreateReader(reader5);
            dr.CreateReader(reader6);
            dr.CreateReader(reader7);
            dr.CreateReader(reader8);
            dr.CreateReader(reader9);
            dr.CreateReader(reader10);
            dr.CreateReader(reader11);
            dr.CreateReader(reader12);
            dr.CreateReader(reader13);
            dr.CreateReader(reader14);
            dr.CreateReader(reader15);
            dr.CreateReader(reader16);
            dr.CreateReader(reader17);
            dr.CreateReader(reader18);
            dr.CreateReader(reader19);
            dr.CreateReader(reader20);
            dr.CreateReader(reader21);
            dr.CreateReader(reader22);
            dr.CreateReader(reader23);
            dr.CreateReader(reader24);
            dr.CreateReader(reader25);
            dr.CreateReader(reader26);
            dr.CreateReader(reader27);
            dr.CreateReader(reader28);
            dr.CreateReader(reader29);
            dr.CreateReader(reader30);
            dr.CreateReader(reader31);
            dr.CreateReader(reader32);
            dr.CreateReader(reader33);
            dr.CreateReader(reader34);
            dr.CreateReader(reader35);
            dr.CreateReader(reader36);
            dr.CreateReader(reader37);
            dr.CreateReader(reader38);
            dr.CreateReader(reader39);
            dr.CreateReader(reader40);
            dr.CreateReader(reader41);
            dr.CreateReader(reader42);
            dr.CreateReader(reader43);
            dr.CreateReader(reader44);
            dr.CreateReader(reader45);
            dr.CreateReader(reader46);
            dr.CreateReader(reader47);
            dr.CreateReader(reader48);
            dr.CreateReader(reader49);
        }

        public void FillExpireDateList(DataRepository dr)
        {
dr.CreateExpireDate("01/04/2016");
            dr.CreateExpireDate("02/04/2016");
            dr.CreateExpireDate("03/04/2016");
            dr.CreateExpireDate("04/04/2016");
            dr.CreateExpireDate("05/04/2017");
            dr.CreateExpireDate("06/04/2016");
            dr.CreateExpireDate("17/04/2016");
            dr.CreateExpireDate("08/04/2016");
            dr.CreateExpireDate("09/04/2016");
            dr.CreateExpireDate("02/05/2017");
            dr.CreateExpireDate("03/12/2016");
            dr.CreateExpireDate("04/06/2016");
            dr.CreateExpireDate("08/11/2016");
            dr.CreateExpireDate("11/10/2017");
            dr.CreateExpireDate("14/04/2016");
            dr.CreateExpireDate("16/09/2016");
            dr.CreateExpireDate("18/08/2017");
            dr.CreateExpireDate("19/07/2016");
            dr.CreateExpireDate("03/06/2016");
            dr.CreateExpireDate("02/10/2016");
            dr.CreateExpireDate("03/11/2016");
            dr.CreateExpireDate("08/11/2016");
            dr.CreateExpireDate("11/10/2016");
            dr.CreateExpireDate("14/04/2016");
            dr.CreateExpireDate("18/09/2016");
            dr.CreateExpireDate("28/11/2016");
            dr.CreateExpireDate("19/10/2016");
            dr.CreateExpireDate("24/04/2016");
            dr.CreateExpireDate("16/09/2016");
            dr.CreateExpireDate("08/11/2016");
            dr.CreateExpireDate("31/01/2017");
            dr.CreateExpireDate("14/04/2017");
            dr.CreateExpireDate("16/09/2017");
            dr.CreateExpireDate("08/11/2017");
            dr.CreateExpireDate("11/10/2017");
            dr.CreateExpireDate("14/04/2017");
            dr.CreateExpireDate("16/09/2017");
            dr.CreateExpireDate("05/04/2016");
            dr.CreateExpireDate("25/04/2016");
            dr.CreateExpireDate("22/04/2016");
            dr.CreateExpireDate("18/04/2018");
            dr.CreateExpireDate("09/04/2016");
            dr.CreateExpireDate("12/04/2016");
            dr.CreateExpireDate("14/04/2016");
            dr.CreateExpireDate("17/04/2017");
            dr.CreateExpireDate("08/04/2016");
            dr.CreateExpireDate("19/04/2016");
            dr.CreateExpireDate("05/04/2016");
            dr.CreateExpireDate("12/04/2016");
            dr.CreateExpireDate("27/04/2016");
        }

        public void FillRentsWithData(DataRepository dr)
        {
            for (int i = 0; i < dr.Books.Count; i++)
            {
                dr.CreateRent(new Rent(dr.Books[i + 1], dr.Readers[i], dr.ExpireDates[i]));
            }
        }
    }
}
